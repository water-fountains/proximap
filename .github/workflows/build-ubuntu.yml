name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: install
        run: |
          set -e
          npm ci
          npm run prestart

          npm run sync_datablue
          npm run build
      - name: lint
        run: npm run lint
      - name: determine whether we should deploy
        if: ${{ github.repository == 'water-fountains/proximap' && github.event_name == 'push' && (github.ref == 'refs/heads/stable' ||  github.ref == 'refs/heads/develop') }}
        run: echo "::set-output name=deployIt::yes"
        id: deployCheck

      - name: setup SSH
        if: ${{ steps.deployCheck.outputs.deployIt == 'yes' }}
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_SSH }}
          SSH_KNOWN_HOSTS: ${{ secrets.DEPLOY_KNOWN_HOSTS }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "$SSH_PRIVATE_KEY"

      - name: deploy
        if: ${{ steps.deployCheck.outputs.deployIt == 'yes' }}
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          BRANCH=$(if [ "${{ github.ref }}" == "refs/heads/stable" ]; then echo "stable"; else echo "develop"; fi)
          if [ "$BRANCH" == "stable" ]
          then
            rsync -r --delete-after dist/. deploy@water-fountains.org:/var/www/stable
          else
            rsync -r --delete-after dist/. deploy@water-fountains.org:/var/www/beta/code/dist
          fi

      - name: cleanup ssh
        if: ${{ steps.deployCheck.outputs.deployIt == 'yes' }}
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh-add -D
          rm -Rf *
